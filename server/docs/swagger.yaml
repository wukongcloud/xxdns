definitions:
  controllers.aclCreateForm:
    properties:
      comment:
        type: string
      disabled:
        type: boolean
      name:
        type: string
      path:
        type: string
    required:
    - name
    - path
    type: object
  controllers.domainCreateForm:
    properties:
      comment:
        type: string
      contract:
        type: string
      disabled:
        type: boolean
      expire:
        type: integer
      name:
        type: string
      provider:
        type: string
      refresh:
        type: integer
      retry:
        type: integer
      serial:
        type: integer
      ttl:
        type: integer
      type:
        type: string
    required:
    - contract
    - disabled
    - expire
    - name
    - provider
    - refresh
    - retry
    - serial
    - ttl
    - type
    type: object
  controllers.errResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  controllers.healthResponse:
    type: object
  controllers.recordCreateForm:
    properties:
      comment:
        type: string
      content:
        type: string
      disabled:
        type: boolean
      domain:
        type: string
      name:
        type: string
      priority:
        type: integer
      ttl:
        type: integer
      type:
        type: string
      view:
        type: string
    required:
    - content
    - domain
    - name
    - ttl
    - type
    - view
    type: object
  controllers.viewCreateForm:
    properties:
      comment:
        type: string
      disabled:
        type: boolean
      name:
        type: string
    required:
    - name
    type: object
  models.Acl:
    properties:
      comment:
        type: string
      disabled:
        type: boolean
      filter:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
  models.Domain:
    properties:
      comment:
        type: string
      contract:
        type: string
      disabled:
        type: boolean
      expire:
        type: integer
      id:
        type: integer
      mininum:
        type: integer
      name:
        type: string
      provider:
        type: string
      refresh:
        type: integer
      retry:
        type: integer
      serial:
        type: integer
      ttl:
        type: integer
      type:
        description: master,slave,hit,forward
        type: string
    required:
    - comment
    - contract
    - expire
    - mininum
    - name
    - provider
    - refresh
    - retry
    - serial
    - ttl
    - type
    type: object
  models.IPDB:
    properties:
      cidr:
        type: string
      comment:
        type: string
      country:
        type: string
      id:
        type: integer
      isp:
        type: string
      province:
        type: string
    type: object
  models.Record:
    properties:
      comment:
        type: string
      content:
        type: string
      disabled:
        type: boolean
      domain:
        type: string
      id:
        type: integer
      name:
        type: string
      priority:
        type: integer
      ttl:
        type: integer
      type:
        type: string
      view:
        type: string
    required:
    - content
    - domain
    - name
    - ttl
    - type
    - view
    type: object
  models.View:
    properties:
      acls:
        items:
          $ref: '#/definitions/models.Acl'
        type: array
      comment:
        type: string
      disabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /api/v1/acls:
    get:
      consumes:
      - application/json
      description: Get all ACLs
      parameters:
      - description: pagesize
        in: query
        name: pagesize
        type: string
      - description: pagenum
        in: query
        name: pagenum
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Acl'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get all ACLs
      tags:
      - Acl
    post:
      consumes:
      - application/json
      description: Create a acl
      parameters:
      - description: 填写ACL信息
        in: body
        name: AclInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/models.Acl'
          - properties:
              comment:
                type: string
              disabled:
                type: boolean
              filter:
                type: string
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Acl'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a acl
      tags:
      - Acl
  /api/v1/acls/{id}:
    delete:
      consumes:
      - application/json
      description: Get acl by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: '{error:{code:400,message:"bad request"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "404":
          description: '{error:{code:404,message:"record not found"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: '{error:{code:404,message:"server error"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get acl by id
      tags:
      - Acl
    get:
      consumes:
      - application/json
      description: Get acl by id
      parameters:
      - description: acl id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Acl'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get acl by id
      tags:
      - Acl
    put:
      consumes:
      - application/json
      description: Create a acl
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: 填写Acl信息
        in: body
        name: aclInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.aclCreateForm'
          - properties:
              comment:
                type: string
              disabled:
                type: boolean
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Acl'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a acl
      tags:
      - Acl
  /api/v1/domains:
    get:
      consumes:
      - application/json
      description: Get all domains
      parameters:
      - description: pagesize
        in: query
        name: pagesize
        type: string
      - description: pagenum
        in: query
        name: pagenum
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Domain'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get all domains
      tags:
      - Domain
    post:
      consumes:
      - application/json
      description: Create a domain
      parameters:
      - description: 填写域名信息
        in: body
        name: domainInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.domainCreateForm'
          - properties:
              comment:
                type: string
              disabled:
                type: boolean
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Domain'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a domain
      tags:
      - Domain
  /api/v1/domains/{id}:
    delete:
      consumes:
      - application/json
      description: Get domain by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: '{error:{code:400,message:"bad request"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "404":
          description: '{error:{code:404,message:"record not found"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: '{error:{code:404,message:"server error"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get domain by id
      tags:
      - Domain
    get:
      consumes:
      - application/json
      description: Get domain by id
      parameters:
      - description: domain id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Domain'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get domain by id
      tags:
      - Domain
    put:
      consumes:
      - application/json
      description: Create a domain
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: 填写域名信息
        in: body
        name: domainInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.domainCreateForm'
          - properties:
              comment:
                type: string
              disabled:
                type: boolean
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Domain'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a domain
      tags:
      - Domain
  /api/v1/ipdb:
    get:
      consumes:
      - application/json
      description: Get all IPDB
      parameters:
      - description: country
        in: query
        name: country
        type: string
      - description: province
        in: query
        name: province
        type: string
      - description: isp
        in: query
        name: isp
        type: string
      - description: pagesize
        in: query
        name: pagesize
        type: string
      - description: pagenum
        in: query
        name: pagenum
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.IPDB'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get all IPDB
      tags:
      - IPDB
    post:
      consumes:
      - application/json
      description: Create a ipdb
      parameters:
      - description: 填写ip信息
        in: body
        name: IPDBInfo
        required: true
        schema:
          $ref: '#/definitions/models.IPDB'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.IPDB'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a ipdb
      tags:
      - IPDB
  /api/v1/records:
    get:
      consumes:
      - application/json
      description: Get all records
      parameters:
      - description: pagesize
        in: query
        name: pagesize
        type: string
      - description: pagenum
        in: query
        name: pagenum
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Record'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get all records
      tags:
      - Record
    post:
      consumes:
      - application/json
      description: Create a record
      parameters:
      - description: 填写视图信息
        in: body
        name: RecordInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.recordCreateForm'
          - properties:
              comment:
                type: string
              content:
                type: string
              disabled:
                type: boolean
              domain:
                type: string
              name:
                type: string
              type:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Record'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a record
      tags:
      - Record
  /api/v1/records/{id}:
    delete:
      consumes:
      - application/json
      description: Get record by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: '{error:{code:400,message:"bad request"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "404":
          description: '{error:{code:404,message:"record not found"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: '{error:{code:404,message:"server error"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get record by id
      tags:
      - Record
    get:
      consumes:
      - application/json
      description: Get record by id
      parameters:
      - description: record id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Record'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get record by id
      tags:
      - Record
    put:
      consumes:
      - application/json
      description: Create a record
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: 填写视图信息
        in: body
        name: RecordInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.recordCreateForm'
          - properties:
              comment:
                type: string
              content:
                type: string
              disabled:
                type: boolean
              domain:
                type: string
              name:
                type: string
              type:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Record'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a record
      tags:
      - Record
  /api/v1/views:
    get:
      consumes:
      - application/json
      description: Get all views
      parameters:
      - description: pagesize
        in: query
        name: pagesize
        type: string
      - description: pagenum
        in: query
        name: pagenum
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.View'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get all views
      tags:
      - View
    post:
      consumes:
      - application/json
      description: Create a view
      parameters:
      - description: 填写视图信息
        in: body
        name: viewInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.viewCreateForm'
          - properties:
              comment:
                type: string
              disabled:
                type: boolean
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.View'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a view
      tags:
      - View
  /api/v1/views/{id}:
    delete:
      consumes:
      - application/json
      description: Get view by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: '{error:{code:400,message:"bad request"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "404":
          description: '{error:{code:404,message:"record not found"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: '{error:{code:404,message:"server error"}}'
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get view by id
      tags:
      - View
    get:
      consumes:
      - application/json
      description: Get view by id
      parameters:
      - description: view id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.View'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Get view by id
      tags:
      - View
    put:
      consumes:
      - application/json
      description: Create a view
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: 填写视图信息
        in: body
        name: viewInfo
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/controllers.viewCreateForm'
          - properties:
              comment:
                type: string
              disabled:
                type: boolean
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.View'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errResponse'
      summary: Create a view
      tags:
      - View
  /healthz:
    get:
      consumes:
      - application/json
      description: Get health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.healthResponse'
            - properties:
                status:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.healthResponse'
            - properties:
                error:
                  type: string
                status:
                  type: string
              type: object
      summary: Get health status
      tags:
      - Health
swagger: "2.0"
